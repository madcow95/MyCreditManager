{\rtf1\ansi\ansicpg949\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red31\green31\blue36;\red115\green167\blue78;
\red252\green95\blue163;\red65\green161\blue192;\red208\green191\blue105;\red93\green216\blue255;\red208\green168\blue255;
\red252\green106\blue93;\red161\green103\blue230;\red158\green241\blue221;\red103\green183\blue164;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c100000\c85000;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c44940\c65475\c30460;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c25395\c63013\c75478;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c36295\c84643\c99897;\csgenericrgb\c81681\c65692\c99927;
\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c62145\c94386\c86819;\csgenericrgb\c40538\c71705\c64209;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\fs24 \cf2 \cb3 \
\cf4 // ## 
\f1 \'b0\'b4\'c3\'bc\'c1\'f6\'c7\'e2
\f0  
\f1 \'bb\'fd\'c8\'b0\'c3\'bc\'c1\'b6
\f0 \cf2 \
\
\cf4 // 1. 
\f1 \'c7\'d1
\f0  
\f1 \'b8\'de\'bc\'ad\'b5\'e5\'bf\'a1
\f0  
\f1 \'bf\'c0\'c1\'f7
\f0  
\f1 \'c7\'d1
\f0  
\f1 \'b4\'dc\'b0\'e8\'c0\'c7
\f0  
\f1 \'b5\'e9\'bf\'a9\'be\'b2\'b1\'e2\'b8\'b8
\f0  
\f1 \'c7\'d5\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4 // 2. else 
\f1 \'c7\'a5\'c7\'f6\'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9
\f0 \cf2 \

\f2\b \cf5 func
\f0\b0 \cf2  \cf6 abc\cf2 () \{\
    \cf4 // 
\f1 \'bf\'a9\'b7\'af
\f0  
\f1 \'b0\'a5\'b7\'a1\'b0\'a1
\f0  
\f1 \'bb\'fd\'b1\'e2\'b8\'e9
\f0  
\f1 \'be\'c8\'b5\'c8\'b4\'d9
\f0 ? -> 
\f1 \'b5\'ce\'b0\'a1\'c1\'f6
\f0  
\f1 \'c0\'cf\'c0\'bb
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b0\'a1\'b4\'c9\'bc\'ba\'c0\'cc
\f0  
\f1 \'c4\'bf\'c1\'f8\'b4\'d9
\f0  -> 
\f1 \'c7\'d4\'bc\'f6\'b4\'c2
\f0  
\f1 \'c7\'cf\'b3\'aa\'c0\'c7
\f0  
\f1 \'c0\'cf\'b8\'b8
\f0  
\f1 \'c7\'d8\'be\'df\'c7\'d1\'b4\'d9
\f0 .\cf2 \
    \cf4 // switch
\f1 \'b5\'b5
\f0  
\f1 \'bd\'e2
\f0  
\f1 \'c1\'c1\'c0\'ba\'b0\'c7
\f0  
\f1 \'be\'c6\'b4\'cf\'b4\'d9
\f0 .\cf2 \
    \cf4 // 
\f1 \'b1\'d8\'b4\'dc\'c0\'fb\'c0\'b8\'b7\'ce
\f0  else
\f1 \'b8\'a6
\f0  
\f1 \'be\'c8\'bd\'e1\'ba\'b8\'b5\'b5\'b7\'cf
\f0  
\f1 \'bf\'ac\'bd\'c0\'c7\'d8\'ba\'b8\'c0\'da
\f0 \cf2 \
    \cf4 // 
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'c7\'d4\'bc\'f6\'b8\'a6
\f0  10
\f1 \'c1\'d9
\f0  
\f1 \'c0\'cc\'b3\'bb\'b7\'ce
\f0  
\f1 \'c7\'d8\'ba\'b8\'b5\'b5\'b7\'cf\'c7\'d5\'bd\'c3\'b4\'d9
\f0 \cf2 \
    \cf4 // 
\f1 \'b4\'dc\'c0\'a7\'c0\'fb\'c0\'b8\'b7\'ce
\f0  
\f1 \'c7\'d4\'bc\'f6\'b8\'a6
\f0  
\f1 \'b8\'b8\'b5\'e5\'b4\'c2\'b0\'d4
\f0  
\f1 \'b3\'b4\'b4\'d9
\f0 .\cf2 \
    \cf4 // if
\f1 \'be\'c8\'bf\'a1
\f0  for
\f1 \'c0\'cc\'b7\'b1\'b0\'c5\'b5\'b5
\f0  
\f1 \'be\'b2\'c1\'f6\'b8\'bb\'b0\'ed
\f0  
\f1 \'c7\'d4\'bc\'f6\'b8\'a6
\f0  
\f1 \'b5\'fb\'b7\'ce
\f0  
\f1 \'c6\'c7\'b4\'d9
\f0 ?\cf2 \
    
\f2\b \cf5 if
\f0\b0 \cf2  \cf7 1\cf2  < \cf7 2\cf2  \{\
        \
    \} \cf4 /*else \{\cf2 \
\cf4         \cf2 \
\cf4     \}*/\cf2 \
\}\
\
\cf4 // 3. 
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'bf\'f8\'bd\'c3
\f0  
\f1 \'b0\'aa\'b0\'fa
\f0  
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb
\f0  
\f1 \'c6\'f7\'c0\'e5\'c7\'d5\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4 /*\cf2 \
\cf4  - 
\f1 \'c7\'cf\'b5\'e5\'c4\'da\'b5\'f9
\f0  
\f1 \'c7\'cf\'c1\'f6\'b8\'bb\'c0\'da
\f0 \cf2 \
\cf4  - 
\f1 \'b8\'c5\'c1\'f7\'b3\'d1\'b9\'f6
\f0 ? 
\f1 \'be\'b2\'c1\'f6\'b8\'bb\'c0\'da
\f0 \cf2 \
\cf4  - (1...45)
\f1 \'c0\'cc\'b7\'af\'c7\'d1
\f0  
\f1 \'b0\'cd\'b5\'e9\'c0\'ba
\f0  
\f1 \'ba\'af\'b5\'bf
\f0  
\f1 \'b0\'a1\'b4\'c9\'bc\'ba\'c0\'cc
\f0  
\f1 \'c0\'d6\'b1\'e2\'bf\'a1
\f0  
\f1 \'c0\'a7\'c7\'e8\'c7\'cf\'b4\'d9
\f0 .\cf2 \
\cf4  - 
\f1 \'be\'c6\'b7\'a1\'c0\'c7
\f0  enum
\f1 \'c3\'b3\'b7\'b3
\f0  
\f1 \'c8\'ae\'bd\'c7\'c8\'f7
\f0  
\f1 \'b9\'fc\'c0\'a7\'b3\'aa
\f0  
\f1 \'b0\'b9\'bc\'f6
\f0  
\f1 \'b5\'ee\'c0\'bb
\f0  
\f1 \'c1\'a4\'c7\'d8\'c1\'d8\'b4\'d9
\f0 .\cf2 \
\cf4  - 
\f1 \'b1\'bb\'c0\'cc
\f0  enum
\f1 \'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d1
\f0  
\f1 \'c0\'cc\'c0\'af
\f0  -> 
\f1 \'be\'c8\'bf\'a1\'bc\'ad
\f0  init
\f1 \'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'be\'f8\'b4\'d9
\f0 \cf2 \
\cf4  - namespace
\f1 \'b7\'ce
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\cf2 \
\cf4  - class
\f1 \'b7\'ce
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'c0\'e7\'c1\'a4\'c0\'c7
\f0 ? 
\f1 \'c7\'d2
\f0  
\f1 \'b0\'a1\'b4\'c9\'bc\'ba\'c0\'cc
\f0  
\f1 \'c0\'d6\'b1\'e2
\f0  
\f1 \'b6\'a7\'b9\'ae\'bf\'a1
\f0  enum
\f1 \'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'df\'b4\'d9
\f0 .\cf2 \
\cf4  */\cf2 \
\

\f2\b \cf5 enum
\f0\b0 \cf2  \cf8 Lotto\cf2  \{\
    
\f2\b \cf5 static
\f0\b0 \cf2  
\f2\b \cf5 let
\f0\b0 \cf2  \cf6 numberRange\cf2  = (\cf7 1\cf2 ...\cf7 45\cf2 )\
    
\f2\b \cf5 static
\f0\b0 \cf2  
\f2\b \cf5 let
\f0\b0 \cf2  \cf6 lotteryCount\cf2  = \cf7 6\cf2 \
    \
    
\f2\b \cf5 enum
\f0\b0 \cf2  \cf8 Message\cf2  \{\
        
\f2\b \cf5 static
\f0\b0 \cf2  
\f2\b \cf5 let
\f0\b0 \cf2  \cf6 wrongPicks\cf2 : \cf9 String\cf2  = \cf10 "
\f1 \'bc\'b1\'c5\'c3\'c0\'cc
\f0  
\f1 \'c0\'df\'b8\'f8\'b5\'c7\'be\'fa\'bd\'c0\'b4\'cf\'b4\'d9
\f0 ."\cf2 \
        
\f2\b \cf5 static
\f0\b0 \cf2  
\f2\b \cf5 let
\f0\b0 \cf2  \cf6 win\cf2 : \cf9 String\cf2  = \cf10 "
\f1 \'b4\'e7\'c3\'b7\'c0\'bb
\f0  
\f1 \'c3\'e0\'c7\'cf\'b5\'e5\'b8\'b3\'b4\'cf\'b4\'d9
\f0 !"\cf2 \
    \}\
\}\
\

\f2\b \cf5 func
\f0\b0 \cf2  \cf6 makeLottoNumbers\cf2 () -> [\cf9 Int\cf2 ] \{\
    
\f2\b \cf5 var
\f0\b0 \cf2  numbers: \cf9 Set\cf2 <\cf9 Int\cf2 > = [] \cf4 // 
\f1 \'c1\'df\'ba\'b9\'c0\'bb
\f0  
\f1 \'b9\'e6\'c1\'f6\'c7\'cf\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d8\'bc\'ad
\f0  Set
\f1 \'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d4
\f0 .\cf2 \
    \
    
\f2\b \cf5 while
\f0\b0 \cf2  numbers.\cf11 count\cf2  < \cf12 Lotto\cf2 .\cf13 lotteryCount\cf2 , 
\f2\b \cf5 let
\f0\b0 \cf2  random: \cf9 Int\cf2  = \cf12 Lotto\cf2 .\cf13 numberRange\cf2 .\cf11 randomElement\cf2 () \{\
        \cf4 // !(
\f1 \'b0\'ad\'c1\'a6
\f0  unwrapping)
\f1 \'be\'b2\'c1\'f6
\f0  
\f1 \'b8\'b6\'bc\'bc\'bf\'e4
\f0  
\f1 \'be\'b2\'b7\'b9\'b1\'e2\'b7\'a1\'bf\'e4
\f0 \cf2 \
        numbers.\cf11 insert\cf2 (random)\
    \}\
    \
    
\f2\b \cf5 return
\f0\b0 \cf2  \cf9 Array\cf2 (numbers)\
\}\
\
\cf4 // 4. 
\f1 \'c7\'d1
\f0  
\f1 \'c1\'d9\'bf\'a1
\f0  
\f1 \'c1\'a1\'c0\'bb
\f0  
\f1 \'c7\'cf\'b3\'aa\'b8\'b8
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4 /*\cf2 \
\cf4  ## 
\f1 \'b5\'f0\'b9\'cc\'c5\'cd
\f0  
\f1 \'b9\'fd\'c4\'a2
\f0 \cf2 \
\
\cf4  - 
\f1 \'b5\'f0\'b9\'cc\'c5\'cd
\f0  
\f1 \'b9\'fd\'c4\'a2\'c0\'ba
\f0  
\f1 \'b8\'f0\'b5\'e2\'c0\'ba
\f0  
\f1 \'c0\'da\'bd\'c5\'c0\'cc
\f0  
\f1 \'c1\'b6\'c0\'db\'c7\'cf\'b4\'c2
\f0  
\f1 \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'c0\'c7
\f0  
\f1 \'bc\'d3\'bb\'e7\'c1\'a4\'c0\'bb
\f0  
\f1 \'b8\'f4\'b6\'f3\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9\'b4\'c2
\f0  
\f1 \'b9\'fd\'c4\'a2\'c0\'d4\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4  - 
\f1 \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'b4\'c2
\f0  
\f1 \'c0\'da\'b7\'e1\'b8\'a6
\f0  
\f1 \'bc\'fb\'b1\'e2\'b0\'ed
\f0  
\f1 \'b8\'de\'bc\'ad\'b5\'e5\'b8\'a6
\f0  
\f1 \'b0\'f8\'b0\'b3\'c7\'d5\'b4\'cf\'b4\'d9
\f0 . 
\f1 \'c1\'ef
\f0 , 
\f1 \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'b4\'c2
\f0  
\f1 \'c1\'b6\'c8\'b8
\f0  
\f1 \'b8\'de\'bc\'ad\'b5\'e5\'b7\'ce
\f0  
\f1 \'b3\'bb\'ba\'ce
\f0  
\f1 \'b1\'b8\'c1\'b6\'b8\'a6
\f0  
\f1 \'b0\'f8\'b0\'b3\'c7\'cf\'b8\'e9
\f0  
\f1 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9
\f0 .\cf2 \
\cf4  - 
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c4\'da\'b5\'e5\'b4\'c2
\f0  
\f1 \'b5\'f0\'b9\'cc\'c5\'cd
\f0  
\f1 \'b9\'fd\'c4\'a2\'c0\'bb
\f0  
\f1 \'be\'ee\'b1\'e2\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'b8\'b7\'ce
\f0  
\f1 \'ba\'bc
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9
\f0 .\cf2 \
\cf4  let output: String = text.options().scratch().absolutePath()\cf2 \
\cf4  - 
\f1 \'c1\'bb
\f0  
\f1 \'b1\'e6\'be\'ee\'c1\'f6\'b4\'f5\'b6\'f3\'b5\'b5
\f0  
\f1 \'c7\'cf\'b3\'aa\'be\'bf
\f0  
\f1 \'bb\'a9\'bc\'ad
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d8\'be\'df
\f0 \cf2 \
\cf4  */\cf2 \
\
\cf4 // 5. 
\f1 \'c0\'cc\'b8\'a7\'c0\'bb
\f0  
\f1 \'c1\'d9\'bf\'a9
\f0  
\f1 \'be\'b2\'c1\'f6
\f0  
\f1 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9
\f0 (
\f1 \'c3\'e0\'be\'e0
\f0  
\f1 \'b1\'dd\'c1\'f6
\f0 ).\cf2 \
\cf4 /*\cf2 \
\cf4  - 
\f1 \'b4\'dc\'bc\'f8\'c7\'d4
\f0  
\f1 \'ba\'b8\'b4\'d9\'b4\'c2
\f0  
\f1 \'b8\'ed\'b7\'e1\'c7\'cf\'b0\'d4
\f0  
\f1 \'c0\'db\'bc\'ba\'c7\'d1\'b4\'d9
\f0 . 
\f1 \'b4\'dc
\f0 , 
\f1 \'c8\'b8\'bb\'e7
\f0  
\f1 \'b3\'bb\'bf\'a1
\f0  
\f1 \'c1\'a4\'c7\'d8\'c1\'f8
\f0  
\f1 \'b1\'d4\'c4\'a2\'c0\'cc
\f0  
\f1 \'c0\'d6\'b4\'d9\'b8\'e9
\f0  
\f1 \'b1\'d4\'c4\'a2\'c0\'bb
\f0  
\f1 \'b5\'fb\'b8\'a6\'b0\'cd
\f0 \cf2 \
\cf4  */\cf2 \
\
\cf4 // 6. 
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'bf\'a3\'c6\'bc\'c6\'bc\'b8\'a6
\f0  
\f1 \'c0\'db\'b0\'d4
\f0  
\f1 \'c0\'af\'c1\'f6\'c7\'d5\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4 /*\cf2 \
\cf4  
\f1 \'c7\'d4\'bc\'f6
\f0 , 
\f1 \'b8\'de\'bc\'ad\'b5\'e5
\f0 , 
\f1 \'c5\'b8\'c0\'d4\'c0\'bb
\f0  
\f1 \'c0\'db\'b0\'d4
\f0  
\f1 \'c2\'c9\'b0\'b3\'ba\'b8\'bc\'bc\'bf\'e4
\f0 \cf2 \
\cf4  */\cf2 \
\
\
\cf4 // 7. 3
\f1 \'b0\'b3
\f0  
\f1 \'c0\'cc\'bb\'f3\'c0\'c7
\f0  
\f1 \'bd\'ba\'c0\'a7\'c7\'c1\'c6\'ae
\f0  
\f1 \'b1\'e2\'ba\'bb
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c5\'b8\'c0\'d4
\f0 (Int, String, Double 
\f1 \'b5\'ee
\f0 ) 
\f1 \'c7\'c1\'b7\'ce\'c6\'db\'c6\'bc\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'f8
\f0  
\f1 \'c5\'b8\'c0\'d4\'c0\'bb
\f0  
\f1 \'b1\'b8\'c7\'f6\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9
\f0 \cf2 \

\f2\b \cf5 struct
\f0\b0 \cf2  \cf8 Animal\cf2  \{\
    \
    
\f2\b \cf5 struct
\f0\b0 \cf2  \cf8 PhysicalInfo\cf2  \{\
        
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 weight\cf2 : \cf9 Double\cf2 \
        
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 height\cf2 : \cf9 Double\cf2 \
        
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 numberOfLegs\cf2 : \cf9 UInt\cf2 \
    \}\
    \
    
\f2\b \cf5 struct
\f0\b0 \cf2  \cf8 BioInfo\cf2  \{\
        
\f2\b \cf5 enum
\f0\b0 \cf2  \cf8 Gender\cf2  \{ 
\f2\b \cf5 case
\f0\b0 \cf2  \cf6 male\cf2 , \cf6 female\cf2 , \cf6 unknown\cf2  \}\
        
\f2\b \cf5 struct
\f0\b0 \cf2  \cf8 Age\cf2  \{\
            
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 value\cf2 : \cf9 Int\cf2 \
            \cf4 // 300
\f1 \'bb\'ec
\f0  
\f1 \'c0\'cc\'c7\'cf\'c0\'c7
\f0  
\f1 \'b5\'bf\'b9\'b0\'b8\'b8
\f0  
\f1 \'b9\'de\'b0\'ed\'bd\'cd\'b4\'d9
\f0 .\cf2 \
            
\f2\b \cf5 init
\f0\b0 \cf2 ?(\cf6 value\cf2 : \cf9 Int\cf2 ) \{\
                
\f2\b \cf5 let
\f0\b0 \cf2  commonAgeRange = (\cf7 0\cf2 ...\cf7 300\cf2 )\
                \cf4 // guard : 
\f1 \'bb\'a1\'b8\'ae
\f0  
\f1 \'c1\'be\'b7\'e1\'bd\'c3\'c5\'b0\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d4
\f0  if 
\f1 \'ba\'b8\'b4\'d9
\f0  
\f1 \'b0\'ad\'b7\'c2\'c7\'d4
\f0 \cf2 \
                
\f2\b \cf5 guard
\f0\b0 \cf2  commonAgeRange.\cf11 contains\cf2 (value) 
\f2\b \cf5 else
\f0\b0 \cf2  \{ 
\f2\b \cf5 return
\f0\b0 \cf2  
\f2\b \cf5 nil
\f0\b0 \cf2  \}\
                
\f2\b \cf5 self
\f0\b0 \cf2 .\cf13 value\cf2  = value\
            \}\
        \}\
        
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 age\cf2 : \cf12 Age\cf2 \
        
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 gender\cf2 : \cf12 Gender\cf2 \
        
\f2\b \cf5 let
\f0\b0 \cf2  \cf6 species\cf2 : \cf9 String\cf2 \
    \}\
    \
    
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 iq\cf2 : \cf9 Int\cf2 \
    
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 name\cf2 : \cf9 String\cf2 \
    
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 physicalInfo\cf2 : \cf12 PhysicalInfo\cf2 \
    
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 bioInfo\cf2 : \cf12 BioInfo\cf2 \
\}\
\cf4 /*\cf2 \
\cf4  
\f1 \'c0\'cc
\f0  
\f1 \'c1\'a4\'b5\'b5\'b7\'ce\'b4\'c2
\f0  
\f1 \'c5\'b8\'c0\'d4\'ba\'b0\'b7\'ce
\f0  
\f1 \'c2\'c9\'b0\'b6
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 . 
\f1 \'c0\'cc\'b8\'bb\'c0\'cc\'be\'df
\f0 \cf2 \
\cf4  */\cf2 \
\
\
\cf4 // 8. 
\f1 \'c0\'cf\'b1\'de
\f0  
\f1 \'c4\'dd\'b7\'ba\'bc\'c7\'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4 /*\cf2 \
\cf4  - 
\f1 \'b4\'dc
\f0  
\f1 \'c7\'cf\'b3\'aa\'c0\'c7
\f0  
\f1 \'c4\'c3\'b7\'ba\'bc\'c7\'b8\'b8
\f0  Property
\f1 \'b7\'ce
\f0  
\f1 \'b0\'a1\'c1\'f6\'b4\'c2
\f0  
\f1 \'c5\'b8\'c0\'d4
\f0 \cf2 \
\cf4  */\cf2 \

\f2\b \cf5 class
\f0\b0 \cf2  \cf8 Stack\cf2 <Item> \{\
    \cf4 // 
\f1 \'c0\'cc\'b7\'b1\'b0\'d4
\f0  1
\f1 \'b1\'de
\f0  Collection\cf2 \
    
\f2\b \cf5 private
\f0\b0 \cf2  
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 items\cf2 : [Item] = []\
    \
    
\f2\b \cf5 func
\f0\b0 \cf2  \cf6 push\cf2 (\cf6 _\cf2  item: Item) \{\
        \cf13 items\cf2 .\cf11 append\cf2 (item)\
    \}\
    \
    
\f2\b \cf5 func
\f0\b0 \cf2  \cf6 pop\cf2 () -> Item \{\
        
\f2\b \cf5 return
\f0\b0 \cf2  \cf13 items\cf2 .\cf11 removeLast\cf2 ()\
    \}\
\}\
\
\cf4 // 
\f1 \'b4\'d9\'b8\'a5
\f0  
\f1 \'b0\'b3\'b9\'df\'c0\'da\'b0\'a1
\f0  
\f1 \'ba\'c3\'c0\'bb
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'b8\'ed\'c8\'ae\'c7\'cf\'b0\'d4
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b5\'b5\'b7\'cf
\f0  
\f1 \'b8\'ed\'bd\'c3
\f0 \cf2 \

\f2\b \cf5 var
\f0\b0 \cf2  \cf6 intStack\cf2  = \cf12 Stack\cf2 <\cf9 Int\cf2 >()\
\cf13 intStack\cf2 .\cf13 push\cf2 (\cf7 3\cf2 )\
\
\cf4 // 9. getter/setter
\f1 \'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'f6\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9
\f0 \cf2 \
\cf4 /*\cf2 \
\cf4  - 
\f1 \'b0\'b4\'c3\'bc\'bf\'a1\'b0\'d4
\f0  
\f1 \'c0\'cf\'c0\'bb
\f0  
\f1 \'bd\'c3\'c5\'b0\'bc\'bc\'bf\'e4
\f0 . 
\f1 \'b9\'b0\'be\'ee\'ba\'b8\'c1\'f6
\f0  
\f1 \'b8\'bb\'b0\'ed
\f0 \cf2 \
\cf4  - Property
\f1 \'c0\'c7
\f0  
\f1 \'b0\'aa\'c0\'bb
\f0  
\f1 \'c1\'f7\'c1\'a2
\f0  
\f1 \'bb\'a9\'bf\'c0\'b0\'c5\'b3\'aa
\f0  
\f1 \'c1\'f7\'c1\'a2
\f0  
\f1 \'bc\'bc\'c6\'c3\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'b5\'b5\'b7\'cf
\f0  
\f1 \'c7\'d8\'c1\'d6\'bc\'bc\'bf\'e4
\f0 \cf2 \
\cf4  - 
\f1 \'c4\'b8\'bd\'b6\'c8\'ad\'b8\'a6
\f0  
\f1 \'c0\'df
\f0  
\f1 \'c7\'d8\'c1\'d6\'bc\'bc\'bf\'e4
\f0 .\cf2 \
\cf4  */\cf2 \

\f2\b \cf5 class
\f0\b0 \cf2  \cf8 Person\cf2  \{\
    
\f2\b \cf5 private
\f0\b0 \cf2  
\f2\b \cf5 var
\f0\b0 \cf2  \cf6 money\cf2 : \cf9 Double\cf2  = \cf7 0.0\cf2 \
    \
    
\f2\b \cf5 func
\f0\b0 \cf2  \cf6 showMoney\cf2 () \{\
        \cf11 print\cf2 (\cf10 "
\f1 \'b3\'aa
\f0  
\f1 \'b5\'b7
\f0  
\f1 \'c0\'cc\'b8\'b8\'c5\'ad
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0  -> \cf2 \\(\cf13 money\cf2 )\cf10 "\cf2 )\
    \}\
    \
    
\f2\b \cf5 func
\f0\b0 \cf2  \cf6 saveMoney\cf2 (\cf6 _\cf2  amount: \cf9 Double\cf2 ) \{\
        \cf13 money\cf2  += amount\
    \}\
\}\
\

\f2\b \cf5 let
\f0\b0 \cf2  \cf6 madcow\cf2 : \cf12 Person\cf2  = \cf12 Person\cf2 ()\
\cf13 madcow\cf2 .\cf13 showMoney\cf2 ()\
\cf13 madcow\cf2 .\cf13 saveMoney\cf2 (\cf7 10_000\cf2 )\
\cf13 madcow\cf2 .\cf13 showMoney\cf2 ()\
\
\cf4 /*\cf2 \
\cf4  
\f1 \'c0\'cc\'b7\'c2\'bc\'ad\'bf\'a1
\f0  
\f1 \'b0\'fc\'c7\'d1
\f0  
\f1 \'c0\'cc\'be\'df\'b1\'e2
\f0 \cf2 \
\cf4  - 
\f1 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae
\f0 , 
\f1 \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'f6\'c5\'a9
\f0 \cf2 \
\cf4     1. 
\f1 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b8\'a6
\f0  
\f1 \'b8\'b7
\f0  
\f1 \'b0\'ae\'b4\'d9
\f0  
\f1 \'be\'b2\'b8\'e9\'bc\'ad
\f0  
\f1 \'b3\'bb
\f0  
\f1 \'bd\'c7\'b7\'c2\'c0\'ce\'c1\'d9
\f0  
\f1 \'be\'c6\'b4\'c2
\f0  
\f1 \'bb\'e7\'b6\'f7\'c0\'cc
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\cf2 \
\cf4     2. 
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2\'b0\'c7
\f0  
\f1 \'c1\'c1\'c0\'ba\'b5\'a5
\f0  
\f1 \'b1\'d7\'b0\'d4
\f0  
\f1 \'b3\'bb
\f0  
\f1 \'bd\'c7\'b7\'c2\'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'bb\'fd\'b0\'a2\'c7\'cf\'c1\'f6\'b4\'c2
\f0  
\f1 \'b8\'bb\'c0\'da
\f0 \cf2 \
\cf4     3. 
\f1 \'b8\'f0\'c1\'fd\'b0\'f8\'b0\'ed\'bf\'a1
\f0  RxSwift, Combine 
\f1 \'c0\'cc\'b7\'b1\'b0\'c5
\f0  
\f1 \'bd\'e1\'c0\'d5\'b4\'c2\'b5\'a5
\f0  UIKit
\f1 \'c0\'ba
\f0  
\f1 \'b8\'b6\'bd\'ba\'c5\'cd
\f0  
\f1 \'c7\'df\'c1\'d2
\f0 ? 
\f1 \'b1\'d7\'b7\'b3
\f0  
\f1 \'bf\'ec\'b4\'eb\'c7\'d5\'b4\'cf\'b4\'d9
\f0  
\f1 \'b6\'f3\'b4\'c2
\f0  
\f1 \'b6\'e6
\f0 \cf2 \
\cf4     4. 
\f1 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'bf\'cd
\f0  
\f1 \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'f6\'c5\'a9\'c0\'c7
\f0  
\f1 \'c2\'f7\'c0\'cc
\f0  ->\cf2 \
\cf4  \cf2 \
\cf4  - 
\f1 \'b5\'f0\'c0\'da\'c0\'ce\'c6\'d0\'c5\'cf
\f0 , 
\f1 \'be\'c6\'c5\'b0\'c5\'d8\'c3\'c4
\f0 \cf2 \
\cf4  */\cf2 \
}